{"version":3,"file":"MobileTooltip-JywXozpF.js","sources":["../../src/components/ui/MobileTooltip.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Tooltip, TooltipProps } from '@heroui/react';\n\ninterface MobileTooltipProps extends Omit<TooltipProps, 'isOpen' | 'onOpenChange'> {\n  children: React.ReactElement;\n  content: React.ReactNode;\n  enableClickOnMobile?: boolean;\n}\n\n/**\n * Mobile-friendly tooltip that opens on click for touch devices\n * and maintains hover behavior for desktop\n */\nexport const MobileTooltip: React.FC<MobileTooltipProps> = ({\n  children,\n  content,\n  enableClickOnMobile = true,\n  ...tooltipProps\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  // Detect if device is mobile/touch\n  useEffect(() => {\n    const checkIsMobile = () => {\n      const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n      const isSmallScreen = window.innerWidth <= 768;\n      setIsMobile(isTouchDevice || isSmallScreen);\n    };\n\n    checkIsMobile();\n    window.addEventListener('resize', checkIsMobile);\n    return () => window.removeEventListener('resize', checkIsMobile);\n  }, []);\n\n  // Close tooltip when clicking outside\n  useEffect(() => {\n    if (!isOpen) return;\n\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      if (!target.closest('[data-mobile-tooltip]')) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, [isOpen]);\n\n  const handleClick = (event: React.MouseEvent) => {\n    if (isMobile && enableClickOnMobile) {\n      event.preventDefault();\n      event.stopPropagation();\n      setIsOpen(!isOpen);\n    }\n  };\n\n  const handleMouseEnter = () => {\n    if (!isMobile) {\n      clearTimeout(timeoutRef.current);\n      setIsOpen(true);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (!isMobile) {\n      timeoutRef.current = setTimeout(() => setIsOpen(false), 100);\n    }\n  };\n\n  // Clone the trigger element to add mobile-specific props\n  const triggerElement = React.cloneElement(children, {\n    onClick: (event: React.MouseEvent) => {\n      // Call original onClick if it exists\n      if (children.props.onClick) {\n        children.props.onClick(event);\n      }\n      handleClick(event);\n    },\n    onMouseEnter: (event: React.MouseEvent) => {\n      // Call original onMouseEnter if it exists\n      if (children.props.onMouseEnter) {\n        children.props.onMouseEnter(event);\n      }\n      handleMouseEnter();\n    },\n    onMouseLeave: (event: React.MouseEvent) => {\n      // Call original onMouseLeave if it exists\n      if (children.props.onMouseLeave) {\n        children.props.onMouseLeave(event);\n      }\n      handleMouseLeave();\n    },\n    'data-mobile-tooltip': true,\n    style: {\n      ...children.props.style,\n      cursor: isMobile ? 'pointer' : children.props.style?.cursor || 'help',\n    },\n  });\n\n  return (\n    <Tooltip\n      {...tooltipProps}\n      content={content}\n      isOpen={isOpen}\n      onOpenChange={setIsOpen}\n      // For mobile, we control the tooltip manually\n      // For desktop, let HeroUI handle hover behavior\n      trigger={'focus' as any}\n      placement={tooltipProps.placement || 'top'}\n      delay={isMobile ? 0 : tooltipProps.delay}\n      closeDelay={isMobile ? 0 : tooltipProps.closeDelay}\n    >\n      {triggerElement}\n    </Tooltip>\n  );\n};\n\nexport default MobileTooltip;\n"],"names":["MobileTooltip","children","content","enableClickOnMobile","tooltipProps","isOpen","setIsOpen","useState","isMobile","setIsMobile","timeoutRef","useRef","useEffect","checkIsMobile","isTouchDevice","window","navigator","maxTouchPoints","isSmallScreen","innerWidth","addEventListener","removeEventListener","handleClickOutside","event","target","closest","document","handleClick","triggerElement","cloneElement","onClick","props","preventDefault","stopPropagation","onMouseEnter","clearTimeout","current","onMouseLeave","setTimeout","style","cursor","Tooltip","onOpenChange","trigger","placement","delay","closeDelay"],"mappings":"4GAaO,MAAMA,EAA8CA,EACzDC,WACAC,UACAC,uBAAsB,KACnBC,YAEH,MAAOC,EAAQC,GAAaC,EAAAA,UAAS,IAC9BC,EAAUC,GAAeF,EAAAA,UAAS,GACnCG,EAAaC,EAAAA,SAGnBC,EAAAA,UAAU,KACR,MAAMC,EAAgBA,KACpB,MAAMC,EAAgB,iBAAkBC,QAAUC,UAAUC,eAAiB,EACvEC,EAAgBH,OAAOI,YAAc,IAC3CV,EAAYK,GAAiBI,IAK/B,OAFcL,IACPO,OAAAA,iBAAiB,SAAUP,GAC3B,IAAME,OAAOM,oBAAoB,SAAUR,IACjD,IAGHD,EAAAA,UAAU,KACR,IAAKP,EAAQ,OAEPiB,MAAAA,EAA4CC,IACjCA,EAAMC,OACTC,QAAQ,0BAClBnB,GAAU,IAKd,OADSc,SAAAA,iBAAiB,QAASE,GAC5B,IAAMI,SAASL,oBAAoB,QAASC,IAClD,CAACjB,IAEEsB,MAsBAC,EAAuBC,EAAAA,aAAa5B,EAAU,CAClD6B,QAAsCP,IAEhCtB,EAAS8B,MAAMD,SACRC,EAAAA,MAAMD,QAAQP,GA1BRA,CAA4BA,IAC3Cf,GAAYL,IACdoB,EAAMS,iBACNT,EAAMU,kBACN3B,GAAWD,KAwBXsB,CAAYJ,IAEdW,aAA2CX,IAErCtB,EAAS8B,MAAMG,cACRH,EAAAA,MAAMG,aAAaX,GAxB3Bf,IACH2B,aAAazB,EAAW0B,SACxB9B,GAAU,KA0BZ+B,aAA2Cd,IAErCtB,EAAS8B,MAAMM,cACRN,EAAAA,MAAMM,aAAad,GAxB3Bf,IACHE,EAAW0B,QAAUE,WAAW,IAAMhC,GAAU,GAAQ,OA2B1D,uBAAuB,EACvBiC,MAAO,IACFtC,EAAS8B,MAAMQ,MAClBC,OAAQhC,EAAW,WAAYP,OAAAA,IAAS8B,MAAMQ,gBAAOC,SAAU,uBAKhEC,EAAM,IACDrC,EACJF,UACAG,SACAqC,aAAcpC,EAGdqC,QAAS,QACTC,UAAWxC,EAAawC,WAAa,MACrCC,MAAOrC,EAAW,EAAIJ,EAAayC,MACnCC,WAAYtC,EAAW,EAAIJ,EAAa0C,WAAU,eAAA,0HAAA7C,SAEjD2B"}