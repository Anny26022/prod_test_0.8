{"version":3,"file":"icons-BXW-tQdz.js","sources":["../../node_modules/@iconify/react/dist/iconify.js"],"sourcesContent":["'use client';\n\nimport { createElement, forwardRef, useState, useEffect } from 'react';\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (\n      // Name cannot be empty\n      !name || // Must have body\n      typeof icon.body !== \"string\" || // Check other props\n      !checkOptionalProps(\n        icon,\n        defaultExtendedIconProps\n      )\n    ) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (\n      // Name cannot be empty\n      !name || // Parent must be set and point to existing icon\n      typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || // Check other props\n      !checkOptionalProps(\n        icon,\n        defaultExtendedIconProps\n      )\n    ) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!// Check prefix: cannot be empty, unless allowSimpleName is enabled\n  // Check name: cannot be empty\n  ((allowSimpleName && icon.prefix === \"\" || !!icon.prefix) && !!icon.name);\n};\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  if (data) {\n    return addIconToStorage(storage, icon.name, data);\n  } else {\n    storage.missing.add(icon.name);\n    return true;\n  }\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconLoaded(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : result;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nfunction splitSVGDefs(content, tag = \"defs\") {\n  let defs = \"\";\n  const index = content.indexOf(\"<\" + tag);\n  while (index >= 0) {\n    const start = content.indexOf(\">\", index);\n    const end = content.indexOf(\"</\" + tag);\n    if (start === -1 || end === -1) {\n      break;\n    }\n    const endEnd = content.indexOf(\">\", end);\n    if (endEnd === -1) {\n      break;\n    }\n    defs += content.slice(start + 1, end).trim();\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n  }\n  return {\n    defs,\n    content\n  };\n}\nfunction mergeDefsAndContent(defs, content) {\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\nfunction wrapSVGContent(body, start, end) {\n  const split = splitSVGDefs(body);\n  return mergeDefsAndContent(split.defs, start + split.content + end);\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = wrapSVGContent(\n        body,\n        '<g transform=\"' + transformations.join(\" \") + '\">',\n        \"</g>\"\n      );\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  const viewBox = [box.left, box.top, boxWidth, boxHeight];\n  attributes.viewBox = viewBox.join(\" \");\n  return {\n    attributes,\n    viewBox,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      // Allowed characters before id: [#;\"]\n      // Allowed characters after id: [)\"], .[a-z]\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + suffix + \"$3\"\n    );\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction checkIconNamesForAPI(icons) {\n  const valid = [];\n  const invalid = [];\n  icons.forEach((name) => {\n    (name.match(matchIconName) ? valid : invalid).push(name);\n  });\n  return {\n    valid,\n    invalid\n  };\n}\nfunction parseLoaderResponse(storage, icons, data) {\n  function checkMissing() {\n    const pending = storage.pendingIcons;\n    icons.forEach((name) => {\n      if (pending) {\n        pending.delete(name);\n      }\n      if (!storage.icons[name]) {\n        storage.missing.add(name);\n      }\n    });\n  }\n  if (data && typeof data === \"object\") {\n    try {\n      const parsed = addIconSet(storage, data);\n      if (!parsed.length) {\n        checkMissing();\n        return;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  checkMissing();\n  loadedNewIcons(storage);\n}\nfunction parsePossiblyAsyncResponse(response, callback) {\n  if (response instanceof Promise) {\n    response.then((data) => {\n      callback(data);\n    }).catch(() => {\n      callback(null);\n    });\n  } else {\n    callback(response);\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      if (!icons2 || !icons2.length) {\n        return;\n      }\n      const customIconLoader = storage.loadIcon;\n      if (storage.loadIcons && (icons2.length > 1 || !customIconLoader)) {\n        parsePossiblyAsyncResponse(\n          storage.loadIcons(icons2, prefix, provider),\n          (data) => {\n            parseLoaderResponse(storage, icons2, data);\n          }\n        );\n        return;\n      }\n      if (customIconLoader) {\n        icons2.forEach((name) => {\n          const response = customIconLoader(name, prefix, provider);\n          parsePossiblyAsyncResponse(response, (data) => {\n            const iconSet = data ? {\n              prefix,\n              icons: {\n                [name]: data\n              }\n            } : null;\n            parseLoaderResponse(storage, [name], iconSet);\n          });\n        });\n        return;\n      }\n      const { valid, invalid } = checkIconNamesForAPI(icons2);\n      if (invalid.length) {\n        parseLoaderResponse(storage, invalid, null);\n      }\n      if (!valid.length) {\n        return;\n      }\n      const api = prefix.match(matchIconName) ? getAPIModule(provider) : null;\n      if (!api) {\n        parseLoaderResponse(storage, valid, null);\n        return;\n      }\n      const params = api.prepare(provider, prefix, valid);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          parseLoaderResponse(storage, item.icons, data);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const list = newIcons[storage.provider][storage.prefix];\n    if (list.length) {\n      loadNewIcons(storage, list);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction setCustomIconsLoader(loader, prefix, provider) {\n  getStorage(provider || \"\", prefix).loadIcons = loader;\n}\nfunction setCustomIconLoader(loader, prefix, provider) {\n  getStorage(provider || \"\", prefix).loadIcon = loader;\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\nlet policy;\nfunction createPolicy() {\n  try {\n    policy = window.trustedTypes.createPolicy(\"iconify\", {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      createHTML: (s) => s\n    });\n  } catch (err) {\n    policy = null;\n  }\n}\nfunction cleanUpInnerHTML(html) {\n  if (policy === void 0) {\n    createPolicy();\n  }\n  return policy ? policy.createHTML(html) : html;\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    backgroundColor: 'currentColor',\n};\nconst coloredProps = {\n    backgroundColor: 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    Image: 'var(--svg)',\n    Repeat: 'no-repeat',\n    Size: '100% 100%',\n};\nconst propsToAddTo = {\n    WebkitMask: monotoneProps,\n    mask: monotoneProps,\n    background: coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = {\n    ...defaultExtendedIconCustomisations,\n    inline: true,\n};\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// Icon name\nname) => {\n    // Get default properties\n    const defaultProps = props.inline\n        ? inlineDefaults\n        : defaultExtendedIconCustomisations;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Check mode\n    const mode = props.mode || 'svg';\n    // Create style\n    const style = {};\n    const customStyle = props.style || {};\n    // Create SVG component properties\n    const componentProps = {\n        ...(mode === 'svg' ? svgDefaults : {}),\n    };\n    if (name) {\n        const iconName = stringToIcon(name, false, true);\n        if (iconName) {\n            const classNames = ['iconify'];\n            const props = [\n                'provider',\n                'prefix',\n            ];\n            for (const prop of props) {\n                if (iconName[prop]) {\n                    classNames.push('iconify--' + iconName[prop]);\n                }\n            }\n            componentProps.className = classNames.join(' ');\n        }\n    }\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case 'mode':\n            case 'ssr':\n                break;\n            // Forward ref\n            case '_ref':\n                componentProps.ref = value;\n                break;\n            // Merge class names\n            case 'className':\n                componentProps[key] =\n                    (componentProps[key] ? componentProps[key] + ' ' : '') +\n                        value;\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    if (mode === 'svg') {\n        // Add style\n        componentProps.style = {\n            ...style,\n            ...customStyle,\n        };\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Add icon stuff\n        componentProps.dangerouslySetInnerHTML = {\n            __html: cleanUpInnerHTML(replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact')),\n        };\n        return createElement('svg', componentProps);\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    componentProps.style = {\n        ...style,\n        '--svg': svgToURL(html),\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...commonProps,\n        ...(useMask ? monotoneProps : coloredProps),\n        ...customStyle,\n    };\n    return createElement('span', componentProps);\n};\n\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nfunction IconComponent(props) {\n    const [mounted, setMounted] = useState(!!props.ssr);\n    const [abort, setAbort] = useState({});\n    // Get initial state\n    function getInitialState(mounted) {\n        if (mounted) {\n            const name = props.icon;\n            if (typeof name === 'object') {\n                // Icon as object\n                return {\n                    name: '',\n                    data: name,\n                };\n            }\n            const data = getIconData(name);\n            if (data) {\n                return {\n                    name,\n                    data,\n                };\n            }\n        }\n        return {\n            name: '',\n        };\n    }\n    const [state, setState] = useState(getInitialState(!!props.ssr));\n    // Cancel loading\n    function cleanup() {\n        const callback = abort.callback;\n        if (callback) {\n            callback();\n            setAbort({});\n        }\n    }\n    // Change state if it is different\n    function changeState(newState) {\n        if (JSON.stringify(state) !== JSON.stringify(newState)) {\n            cleanup();\n            setState(newState);\n            return true;\n        }\n    }\n    // Update state\n    function updateState() {\n        var _a;\n        const name = props.icon;\n        if (typeof name === 'object') {\n            // Icon as object\n            changeState({\n                name: '',\n                data: name,\n            });\n            return;\n        }\n        // New icon or got icon data\n        const data = getIconData(name);\n        if (changeState({\n            name,\n            data,\n        })) {\n            if (data === undefined) {\n                // Load icon, update state when done\n                const callback = loadIcons([name], updateState);\n                setAbort({\n                    callback,\n                });\n            }\n            else if (data) {\n                // Icon data is available: trigger onLoad callback if present\n                (_a = props.onLoad) === null || _a === void 0 ? void 0 : _a.call(props, name);\n            }\n        }\n    }\n    // Mounted state, cleanup for loader\n    useEffect(() => {\n        setMounted(true);\n        return cleanup;\n    }, []);\n    // Icon changed or component mounted\n    useEffect(() => {\n        if (mounted) {\n            updateState();\n        }\n    }, [props.icon, mounted]);\n    // Render icon\n    const { name, data } = state;\n    if (!data) {\n        return props.children\n            ? props.children\n            : props.fallback\n                ? props.fallback\n                : createElement('span', {});\n    }\n    return render({\n        ...defaultIconProps,\n        ...data,\n    }, props, name);\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = forwardRef((props, ref) => IconComponent({\n    ...props,\n    _ref: ref,\n}));\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = forwardRef((props, ref) => IconComponent({\n    inline: true,\n    ...props,\n    _ref: ref,\n}));\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, getIcon, iconLoaded, listIcons, loadIcon, loadIcons, replaceIDs, setCustomIconLoader, setCustomIconsLoader };\n"],"names":["defaultIconDimensions","Object","freeze","left","top","width","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","defaultExtendedIconProps","body","hidden","mergeIconData","parent","child","result","obj1","obj2","mergeIconTransformations","key","internalGetIconData","data","name","tree","icons","aliases","create","currentProps","parse","name2","forEach","parseIconSet","callback","names","not_found","Array","push","resolved","keys","concat","resolve","value","getIconsTree","item","optionalPropertyDefaults","provider","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","prefix","icon","matchIconName","stringToIcon","validate","allowSimpleName","colonSeparated","split","slice","length","shift","pop","validateIconName","dashSeparated","join","dataStorage","getStorage","providerStorage","missing","Set","newStorage","addIconSet","storage","add","simpleNames","allowSimpleNames","allow","getIconData","iconName","has","addCollection","added","err","addIconToStorage","addIcon","defaultIconSizeCustomisations","defaultIconCustomisations","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","regex","randomPrefix","Date","now","toString","random","counter","replaceIDs","ids","match","exec","suffix","id","newID","escapedID","replace","RegExp","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","fetchModule","fetch","detectFetch","fetchAPIModule","prepare","results","maxLength","maxHostLength","host","max","url","calculateMaxLength","type","send","params","getPath","iconsList","URLSearchParams","uri","defaultError","then","response","status","json","setTimeout","shouldAbort","catch","removeCallback","storages","items","loaderCallbacks","filter","row","idCounter","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","floor","list","nextIndex","startTime","lastError","queriesSent","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","failQuery","clearQueue","execNext","resource","status2","isError","queued","indexOf","moduleResponse","queriesPending","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query2","error","find","setIndex","getIndex","emptyCallback$1","redundancyCache","sendAPIQuery","target","redundancy","api","cached","cachedReundancy","getRedundancyCache","emptyCallback","loadedNewIcons","iconsLoaderFlag","pendingCallbacksFlag","hasPending","oldLength","pending","loaded","updateCallbacks","parseLoaderResponse","checkMissing","pendingIcons","delete","console","parsePossiblyAsyncResponse","Promise","loadNewIcons","iconsToLoad","sort","iconsQueueFlag","icons2","customIconLoader","loadIcon","loadIcons","valid","invalid","checkIconNamesForAPI","sortedIcons","a","b","localeCompare","lastIcon","localStorage","sortIcons","listToIcons","callCallback","newIcons","sources","lastProvider","lastPrefix","providerNewIcons","pendingQueue","pendingSources","bind","storeCallback","separator","flipFromString","custom","flip","str","trim","rotateFromString","defaultValue","units","value2","parseInt","policy","cleanUpInnerHTML","html","window","trustedTypes","createPolicy","createHTML","s","defaultExtendedIconCustomisations","inline","svgDefaults","xmlns","xmlnsXlink","role","commonProps","display","monotoneProps","backgroundColor","coloredProps","propsToAdd","Image","Repeat","Size","propsToAddTo","WebkitMask","mask","background","inlineDefaults","fixSize","render","props","defaultProps","customisations","valueType","mergeCustomisations","mode","style","customStyle","componentProps","classNames","className","ref","color","fullIcon","fullCustomisations","box","transformations","tempValue","rotation","unshift","start","end","content","tag","defs","endEnd","splitSVGDefs","wrapSVGContent","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","setAttr","isUnsetKeyword","viewBox","iconToSVG","renderAttribs","verticalAlign","assign","localCounter","createElement","dangerouslySetInnerHTML","__html","useMask","renderAttribsHTML","attr","iconToHTML","svg","encodeSVGforURL","svgToData","document","_window","IconifyPreload","preload","e","IconifyProviders","providers","IconComponent","mounted","setMounted","useState","ssr","setAbort","state","setState","getInitialState","changeState","newState","JSON","stringify","updateState","_a","onLoad","call","useEffect","children","fallback","Icon","forwardRef","_ref"],"mappings":"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","x_google_ignoreList":[0]}