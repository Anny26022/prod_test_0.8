{"version":3,"file":"trade-statistics-BHytxO5G.js","sources":["../../src/components/analytics/trade-statistics.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Tooltip, Input } from \"@heroui/react\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { Trade } from \"../../types/trade\";\r\nimport { calcWeightedRewardRisk } from '../../utils/tradeCalculations';\r\nimport { useAccountingCalculations, useAccountingMethodDisplay } from \"../../hooks/use-accounting-calculations\";\r\nimport { useGlobalFilter } from \"../../context/GlobalFilterContext\";\r\nimport { useAccountingMethod } from \"../../context/AccountingMethodContext\";\r\nimport { isTradeInGlobalFilter } from \"../../utils/dateFilterUtils\";\r\nimport MobileTooltip from \"../ui/MobileTooltip\";\r\n\r\ninterface StatProps {\r\n  label: string;\r\n  value: string | number;\r\n  tooltip?: string;\r\n  isPercentage?: boolean;\r\n  index?: number;\r\n}\r\n\r\nconst Stat: React.FC<StatProps> = ({ label, value, tooltip, isPercentage, index = 0 }) => {\r\n  const [isEditing, setIsEditing] = React.useState(false);\r\n  const [editValue, setEditValue] = React.useState(value.toString());\r\n  const [isHovered, setIsHovered] = React.useState(false);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"relative overflow-hidden rounded-lg\"\r\n      initial={{ opacity: 0, y: 10 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: index * 0.1 }}\r\n      onHoverStart={() => setIsHovered(true)}\r\n      onHoverEnd={() => setIsHovered(false)}\r\n    >\r\n      <motion.div\r\n        className=\"absolute inset-0 bg-gradient-to-r from-primary-500/5 via-transparent to-transparent\"\r\n        initial={{ x: \"-100%\" }}\r\n        animate={{ x: isHovered ? \"0%\" : \"-100%\" }}\r\n        transition={{ type: \"spring\", stiffness: 100, damping: 20 }}\r\n      />\r\n\r\n      <motion.div\r\n        className=\"relative flex justify-between items-center p-3 bg-content2 dark:bg-gray-900 border border-foreground-200/10 dark:border-gray-800\"\r\n        whileHover={{ x: 4 }}\r\n        transition={{ type: \"spring\", stiffness: 400, damping: 10 }}\r\n      >\r\n        <div className=\"flex items-center gap-2\">\r\n          <span className=\"text-sm font-medium text-foreground-700 dark:text-gray-300\">\r\n            {label}\r\n          </span>\r\n          {tooltip && (\r\n            <MobileTooltip\r\n              content={tooltip}\r\n              classNames={{\r\n                base: \"py-2 px-4 shadow-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800\",\r\n                content: \"text-sm text-foreground-700 dark:text-gray-300\"\r\n              }}\r\n            >\r\n              <motion.span\r\n                whileHover={{ scale: 1.2 }}\r\n                whileTap={{ scale: 0.9 }}\r\n                className=\"cursor-help\"\r\n              >\r\n                <Icon icon=\"lucide:info\" className=\"w-4 h-4 text-foreground-400 dark:text-gray-500\" />\r\n              </motion.span>\r\n            </MobileTooltip>\r\n          )}\r\n        </div>\r\n\r\n        <AnimatePresence mode=\"wait\">\r\n          {isEditing ? (\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.95 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              exit={{ opacity: 0, scale: 0.95 }}\r\n              transition={{ duration: 0.15 }}\r\n            >\r\n              <Input\r\n                size=\"sm\"\r\n                value={editValue}\r\n                onChange={(e) => setEditValue(e.target.value)}\r\n                onBlur={() => setIsEditing(false)}\r\n                onKeyDown={(e) => e.key === \"Enter\" && setIsEditing(false)}\r\n                autoFocus\r\n                classNames={{\r\n                  inputWrapper: \"h-8 min-h-unit-8 bg-white dark:bg-gray-900\",\r\n                  input: \"text-sm font-medium text-right dark:text-white\"\r\n                }}\r\n                endContent={isPercentage &&\r\n                  <span className=\"text-foreground-400 dark:text-gray-400 text-sm\">%</span>\r\n                }\r\n              />\r\n            </motion.div>\r\n          ) : (\r\n            <motion.div\r\n              className=\"font-semibold text-sm cursor-pointer text-foreground-800 dark:text-white\"\r\n              onClick={() => setIsEditing(true)}\r\n              whileHover={{ scale: 1.05 }}\r\n              whileTap={{ scale: 0.95 }}\r\n              layout\r\n            >\r\n              {isPercentage ? `${value}%` : value}\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\ninterface TradeStatisticsProps {\r\n  trades: Trade[];\r\n}\r\n\r\nexport const TradeStatistics: React.FC<TradeStatisticsProps> = ({ trades }) => {\r\n  const { displayName } = useAccountingMethodDisplay();\r\n  const { accountingMethod } = useAccountingMethod();\r\n  const useCashBasis = accountingMethod === 'cash';\r\n  const { filter: globalFilter } = useGlobalFilter();\r\n\r\n  // Filter trades based on global filter and accounting method\r\n  const filteredTrades = React.useMemo(() => {\r\n    if (globalFilter.type === 'all') {\r\n      return trades; // No filtering for \"All Time\"\r\n    }\r\n\r\n    return trades.filter(trade => isTradeInGlobalFilter(trade, globalFilter, useCashBasis));\r\n  }, [trades, globalFilter, useCashBasis]);\r\n\r\n  // Use accounting-aware calculations from the shared hook with filtered trades\r\n  const {\r\n    totalTrades,\r\n    winRate,\r\n    avgPosMove,\r\n    avgNegMove,\r\n    avgPositionSize,\r\n    avgHoldingDays,\r\n    avgR\r\n  } = useAccountingCalculations(filteredTrades);\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n\r\n      <div className=\"space-y-2\">\r\n        <Stat\r\n          label=\"Win %\"\r\n          value={winRate.toFixed(2)}\r\n          isPercentage\r\n          tooltip=\"Percentage of profitable trades in the last 12 months\"\r\n          index={0}\r\n        />\r\n        <Stat\r\n          label=\"Avg Gain\"\r\n          value={avgPosMove.toFixed(2)}\r\n          isPercentage\r\n          tooltip=\"Average percentage gain on winning trades\"\r\n          index={1}\r\n        />\r\n        <Stat\r\n          label=\"Avg Loss\"\r\n          value={avgNegMove.toFixed(2)}\r\n          isPercentage\r\n          tooltip=\"Average percentage loss on losing trades\"\r\n          index={2}\r\n        />\r\n        <Stat\r\n          label=\"Avg Position Size\"\r\n          value={avgPositionSize.toFixed(2)}\r\n          isPercentage\r\n          tooltip=\"Average position size as percentage of portfolio\"\r\n          index={3}\r\n        />\r\n        <Stat\r\n          label=\"Avg Holding Days\"\r\n          value={avgHoldingDays.toFixed(2)}\r\n          tooltip=\"Average number of days positions are held\"\r\n          index={4}\r\n        />\r\n        <Stat\r\n          label=\"Avg R:R\"\r\n          value={avgR.toFixed(2)}\r\n          tooltip=\"Average reward-to-risk ratio across all trades (weighted, matches dashboard logic)\"\r\n          index={5}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":["Stat","label","value","tooltip","isPercentage","index","isEditing","setIsEditing","React","useState","editValue","setEditValue","toString","isHovered","setIsHovered","_jsxs","motion","div","className","initial","opacity","y","animate","transition","delay","onHoverStart","onHoverEnd","children","_jsx","x","type","stiffness","damping","whileHover","MobileTooltip","content","classNames","base","span","scale","whileTap","Icon","icon","AnimatePresence","mode","exit","duration","Input","size","onChange","e","target","onBlur","onKeyDown","key","autoFocus","inputWrapper","input","endContent","onClick","layout","TradeStatistics","trades","useAccountingMethodDisplay","accountingMethod","useAccountingMethod","useCashBasis","filter","globalFilter","useGlobalFilter","filteredTrades","useMemo","trade","isTradeInGlobalFilter","totalTrades","winRate","avgPosMove","avgNegMove","avgPositionSize","avgHoldingDays","avgR","useAccountingCalculations","toFixed"],"mappings":"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"}